---
import Footer from '../../components/Footer.astro';

// Fonction pour calculer les statistiques
async function getFeedbackStats() {
  try {
    const response = await fetch('https://ratings-api-rouge.vercel.app/api/ratings', {
      headers: {
        'Accept': 'application/json',
        'Accept-Charset': 'utf-8'
      }
    });
    const data = await response.json();
    
    if (!Array.isArray(data)) {
      throw new Error('Invalid data format');
    }
    
    const totalRatings = data.length;
    const averageRating = totalRatings > 0 
      ? (data.reduce((acc, curr) => acc + Number(curr.rating), 0) / totalRatings)
      : 0;
      
    const currentMonth = new Date().getMonth();
    const currentMonthRatings = data.filter(rating => {
      const ratingDate = new Date(rating.created_at);
      return ratingDate.getMonth() === currentMonth;
    }).length;

    return {
      total: totalRatings.toString(),
      average: averageRating.toFixed(1),
      monthly: currentMonthRatings.toString()
    };
  } catch (error) {
    console.error('Erreur lors de la récupération des statistiques:', error);
    return { total: '0', average: '0.0', monthly: '0' };
  }
}

const stats = await getFeedbackStats();
---

<div class="dashboard-container">
  <nav class="sidebar">
    <div class="logo">
      <h2>Panneau d'administration</h2>
    </div>
    <ul class="nav-links">
      <li><a href="#" class="active">Vue d'ensemble</a></li>
      <li><a href="#products">Produits</a></li>
      <li><a href="#users">Utilisateurs</a></li>
      <li><a href="#reviews">Évaluations</a></li>
      <li><a href="#stats">Statistiques</a></li>
      <li><a href="#settings">Paramètres</a></li>
      <li><button id="logoutBtn" class="logout-btn">Déconnexion</button></li>
    </ul>
  </nav>

  <main class="main-content">
    <header class="top-bar">
      <h1>Tableau de bord</h1>
      <div class="user-info">
        <span>Admin</span>
      </div>
    </header>

    <div class="dashboard-content">
      <div class="stats-grid">
        <div class="stat-card">
          <h3>Évaluations totales</h3>
          <p class="stat-number" data-value={stats.total}>{stats.total}</p>
        </div>
        <div class="stat-card">
          <h3>Note moyenne</h3>
          <p class="stat-number" data-value={stats.average}>{stats.average}<span class="stat-unit">/5</span></p>
        </div>
        <div class="stat-card">
          <h3>Ce mois</h3>
          <p class="stat-number" data-value={stats.monthly}>{stats.monthly}</p>
        </div>
      </div>
    </div>
  </main>
</div>

<style>
  .dashboard-container {
    display: flex;
    min-height: 100vh;
  }

  .sidebar {
    width: 250px;
    background: #1e293b;
    color: white;
    padding: 1rem;
  }

  .logo h2 {
    color: white;
    padding: 1rem;
    margin-bottom: 2rem;
  }

  .nav-links {
    list-style: none;
    padding: 0;
  }

  .nav-links a {
    display: block;
    padding: 0.75rem 1rem;
    color: white;
    text-decoration: none;
    transition: all 0.3s;
  }

  .nav-links a:hover, .nav-links a.active {
    background: #2563eb;
    border-radius: 0.5rem;
  }

  .main-content {
    flex: 1;
    background: #f8fafc;
  }

  .top-bar {
    background: white;
    padding: 1rem 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .dashboard-content {
    padding: 2rem;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;
  }

  .stat-card {
    background: white;
    padding: 1.5rem;
    border-radius: 0.5rem;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .stat-number {
    font-size: 2rem;
    font-weight: bold;
    color: #2563eb;
    margin-top: 0.5rem;
  }

  .stat-unit {
    font-size: 1rem;
    color: #64748b;
    margin-left: 4px;
  }

  .logout-btn {
    width: 100%;
    padding: 0.75rem;
    margin-top: 2rem;
    background: #dc2626;
    color: white;
    border: none;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: all 0.3s;
  }

  .logout-btn:hover {
    background: #b91c1c;
  }
</style>

<script>
  // Vérification de l'authentification
  if (!sessionStorage.getItem('adminAuthenticated')) {
    window.location.href = '/admin/login';
  }

  // Gestion de la déconnexion
  document.getElementById('logoutBtn')?.addEventListener('click', () => {
    sessionStorage.removeItem('adminAuthenticated');
    window.location.href = '/admin/login';
  });

  // Actualisation automatique des statistiques
  setInterval(async () => {
    try {
      const response = await fetch(window.location.href);
      const html = await response.text();
      const parser = new DOMParser();
      const doc = parser.parseFromString(html, 'text/html');
      
      document.querySelectorAll('.stat-number').forEach((currentStat) => {
        const newStat = doc.querySelector(`[data-value="${currentStat.getAttribute('data-value')}"]`);
        if (newStat && currentStat.textContent !== newStat.textContent) {
          currentStat.textContent = newStat.textContent;
        }
      });
    } catch (error) {
      console.error('Erreur lors de l\'actualisation des statistiques:', error);
    }
  }, 30000);
</script>
